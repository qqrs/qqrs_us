{"howto/archiving/artwork":{"title":"artwork","links":[],"tags":[],"content":"Archiving hanging art\nphotographing 2D artwork, paintings, framed photos, plaques, and other oversized items\nResolution\n2016 FADGI guidelines recommend:\n\n10k pixels across the longest dimension\nor minimum 600 ppi of the physical object\n\nTaking photos\nYou need to think about:\n\nHow to mount it\nHow to light it\nWhat camera settings to use\n\nMaterials\n\ncamera\ntripod\neasel\n2x clamp lights\n\nMounting\nIdeally you want the camera on a tripod facing the midpoint of the artwork.\nThe best way is to hang the artwork on the wall. If you can’t do that, an easel will work. You can also use thumbtacks or low-tack tape (artist’s tape).\nTake it out of the frame if you can to prevent glare and reflections. If you can’t, you can use black foam core to either side of the camera to block light from the room.\nFor unframed posters that curl up, you can use a magnetic poster hanger. Or do the best you can with weights on the corners, shooting from above.\nLighting\nEven lighting is the most important thing. If you’re an artist and serious about taking photos of your artwork, you should probably spring for some $$$ lighting. But here are the $ options.\n\nYou could shoot outside and use the sun\nYou can shoot inside and use lights\n\nThe downside of shooting outside is you need to wait for the right conditions. Rainy days won’t work. You want a sunny day but some diffusion from the atmosphere is helpful. Direct sunlight may be too bright. Some people shoot under a porch or at the edge of their garage. Trees probably won’t work since they cast uneven shadows.\nShooting inside gives you more control. Block the windows and turn off the overhead lights. You want two lights. They should be identical and placed symmetrically. Place them either side of the artwork at a 30-45 deg angle to the wall, at the same height as the camera. Make sure you aren’t seeing a reflection from the lights.\nClamp lights from the hardware store are cheap. They can be mounted on chairs. I’ve seen a recommendation to use 100W incandescent soft white bulbs, but the incandescents I bought were casting uneven light. Now that they’re being phased out it may be hard to find good quality incandescents. I settled on using a 100W LED bright white (3000K color temperature) bulbs.\nCamera\n\n\nMount the camera on a tripod and position it square to the artwork. Use a remote trigger or self timer to take the shot. This way you can use a longer shutter speed if needed without worrying about motion blur.\n\n\nStart off setting the white balance appropriately for your light source. If you have a gray card, use it. If not, choose the incandescent or sunlight option, as appropriate.\n\n\nUse the lowest ISO setting available (100 or 200). This will minimize noise. If you don’t have enough light for proper exposure, you can bump it up later, but hopefully you’ll have headroom to increase shutter speed so it won’t be necessary.\n\n\nSet the camera mode to aperture priority. (It may make sense later to use manual mode and dial in a shutter speed to get repeatable shots.)\n\n\nSet the aperture pretty narrow, somewhere from f/11 — f/16. A wide aperture results in a shallow depth-of-field, which actually isn’t too bad—the canvas is flat, after all. But starting with a narrow aperture is best to ensure that the finest details stay sharp.\n\n\nAt this point you can probably start shooting. You should check that the exposure and focus are ok. If they aren’t, here are some tricks:\n\n\n(Optional) If the artwork is very light or dark and you want to preserve that effect in the photo, you can use a grey card (or newspaper with big black X) as a neutral target for exposure and focusing. Trigger the camera self-timer and remove the newspaper before each shot.\n\n\n(Optional) If you want repeatable shots, you can switch to manual mode and dial in the shutter speed once you’ve seen what the camera has been selecting automatically. If you’re having trouble with the focus changing, you can also focus manually.\n\n\nReferences\nwww.vmfa.museum/teens/wp-content/uploads/sites/19/2014/02/How_to_shoot_art-FINAL.pdf\nartprof.org/pro-development/art-school-portfolios/art-school-portfolios-photographing-2d-art/\nexpertphotography.com/photographing-artwork-tips/\nStitching photos\nIf you can’t get a high enough resolution in one photo, you can stitch multiple photos.\nI only tried this once and results weren’t perfect. I used Hugin and this tutorial.\nHere’s the procedure I tried:\nOpen Hugin\nLoad images\nAlign\nProjection tab. Fit button. Leave on Rectilinear.\nCreate panorama\nChange width to 12000px (or desired resolution).\nOnly use Exposure corrected, low dynamic range.\n\nOpen in photo preview app.\nCrop.\nExport JPG.\n"},"howto/hobbies/ham-radio-baofeng":{"title":"ham radio baofeng","links":[],"tags":[],"content":"baofeng\nYouTube: Baofeng UV-5R | The Gateway Drug To Ham Radio\nUV-5R programming\nprogramming cable\nguide to CHIRP columns\nThe recommended way to import a CSV in CHIRP is to download from your radio, delete all rows of channel memories (select all, right click, delete), then import the CSV.\nunlocking\nUnlock to use a UV-5R on Part 90 and FRS/MURS/GMRS bands.\n\nIIRC you don’t need to unlock it if you’re programming with CHIRP, it only affects frequencies entered by keypad. [TODO: is this true?]\n\nUV-5Rs may require different unlocking tricks. Some folks report new UV-5Rs that can’t be unlocked. But many new UV-5Rs can be unlocked. Consider buying from a seller that has a return policy.\nYouTube: How To Unlock A New Baofeng UV-5R\n\nUPDATE: This Unlock works on Baofeng UV-5R radios manufactured after around 2020 however there are reports that it may not work on UV5R radios manufactured after mid 2022.\nUPDATE#2 - I have seen reports here and online that this hack does not work on new UV-5R radios manufactured after approximately July 2022 - BUT, those radios can easily be unlocked by the “Factory Reset” option in the menus.\nUPDATE #3 - I have seen reports that some newer radios (purchased after July/Aug 2022 are locked, and cannot be unlocked.\n\nSome folks say their GT-5Rs could not be unlocked without complicated re-flashing of firmware. But some also say the standard UV-5R trick worked.\nGT-5R unlocking\n\nwww.reddit.com/r/TrueBaofeng/comments/13crbsi/unlock_blocked_frequencies_on_baofeng_gt5r/\nwww.reddit.com/r/lowsodiumhamradio/comments/spgfo9/comment/hwj06lr/\n\nCHIRP has an additional restriction for GT-5R to prevent programming frequencies outside ham bands. You can program as a UV-5R to get around this restriction.\nUV-5R redemption arc\nBaofeng had/has all these problems\n\nmajor problems\n\neasily used on any land mobile frequency, including emergency services, etc.\nprogrammed with factory test frequencies out of the box, not legal ham bands\nbad spurious emissions on harmonics/overtones of Tx frequency\n\n\nminor problems\n\neasily used on Part 90 business band and FRS/MURS/GMRS\nmarketed as walkie talkies, no mention of ham license\ntransmitting at power levels greater than allowed\nauthorization sticker issues\n\n\n\nFCC action against Baofeng in 2018\nGT-5R\n\nintended as an “FDA-compliant” UV-5R\nintroduced 2021\nfixed the spurious emissions problem\nlocked to ham bands\n\nnew UV-5Rs\n\nlooks like new UV-5Rs are identical in hardware to GT-5R as of 2022\npass spurious emissions spec more reliably as of ~2022\nlocked to ham bands\n\ngenerally easy to unlock\n\n\n\nGT-5R vs. UV-5R?\n\nseems they’re the same? any reason to prefer GT-5R in 2024?\n\nit’s possible the GT-5R has better quality assurance testing?\n\n\nsome batches of GT-5R harder to unlock\n\nmany are just as easy as UV-5R\nsome batches of UV-5R also harder to unlock\n\n\n\nFurther info\nFCC citation (pdf)\nARRL: FCC Cites Baofeng Importer for Illegally Marketing Unauthorized RF Devices\nYouTube: Watch This Before Buying A Baofeng Ham Radio… Or Another One\nRadioddity: GT-5R\n\nFrequency Range: 144-148MHz, 420-450MHz (TX) | 144-148, 136-174MHz, 400-480MHz (RX)|\nOutput Power: 4W / 1W (Max 5W)\n\nSpurious emissions demonstrated here:\n\nYouTube: Dump the UV-5R and Get the GT-5R (#387)\nYouTube: Replace Your Baofeng UV-5R With This…\nYouTube: Good And Bad Baofeng UV-5R On Spectrum Analyser\n\nSpurious emissions:\n\nharmonics and spurs\ntends to be much worse on VHF than UHF\nsome UV-5Rs are pretty ok and pass spec, some are terrible\n\nNew UV-5R spurious emissions improvements:\n\nRadioReference: BaoFeng Spectral Purity IMD Testing\n\n\nHaving personally carried out these measurements dozens of times, including on a range of amateur transceivers, I can confirm that earlier Baofengs were terrible in both harmonic and intermodulation distortion but more recent units are much better with harmonic distortion although they are still not very good with IMD.\n\n\n/r/baofeng: BaoFeng Spectral Purity IMD Testing\n/r/baofeng: So how bad is the TX on the UV-5R really?\n\n/r/baofeng: Many new Baofengs are limited to only transmit on ham radio frequencies\nNew UV-5Rs have hardware identical to GT-5Rs, including output filtering:\n\nYouTube: Are the UV-5R and the GT-5R the same radio?\n\nBF-888S\nBaofeng BF-888S - A Practical Review"},"howto/hobbies/ham-radio":{"title":"ham radio","links":["howto/hobbies/ham-radio-baofeng"],"tags":[],"content":"radios\nsee: ham radio baofeng\nfrequently recommend non-Baofeng radios:\nJapanese manufacturers Yaesu, Icom, Kenwood\nBaofengs and other cheap radios use a direct conversion frontend. Strong stations in other bands (like broadcast FM) can saturate the RF amplifier. Better radios use super-heterodyne frontends.\nClasses of spurious emissions include:\n\nharmonics\nspurs\nintermodulation\n\nYouTube: Best Ham Radio Handhelds In 2022\nham radio license\nTechnician class is the first level. Costs $35 and good for 10 years. Most folks can pass with a few days or couple weeks of study.\nSee: www.arrl.org/getting-licensed\nBe aware: the address you use to apply for your license will be publicly visible in the FCC database. The regulations don’t say you need to use your home address, it just needs to be a valid mailing address.\nExam study\n\nmultiple choice\nquestion banks for exam are available for study\n\nHamStudy.org study mode quizzes\nKB6NU’s No-Nonsense study guides\nARRL license manual\nYouTube: Ham Radio Crash Course\nExam sites\nwww.arrl.org/find-an-amateur-radio-license-exam-session\nSome online test sites are very uptight and have lots of rules. Look for one that’s friendly and has reasonable test requirements:\ne.g., www.kj7qzj.com/\nFCC compliance\non unlocking Baofengs, etc.:\n\nBe aware that these radios are technically not FCC-approved to transmit on some of these frequencies, though many people do. Also be aware that they can transmit at power levels higher than permitted, MURS/FRS in particular. So consider your impact on other users of the bands if you transmit at all. Be aware that you may not be able to hear a distant lower-powered transmitter, but your transmission may still interfere with theirs.\n\nFCC rules (paraphrased)\n\na radio certified for one service can’t transmit on other services\n\ne.g., ham VHF/UHF, Part 90 business band, GMRS, FRS, MURS\nin theory you would need a separate radio for each one\nPart 90 business band generally must be pre-programmed with authorized frequencies, not adjusted on the fly\n\n\n"},"howto/sysadmin/password-manager-recommendations":{"title":"password manager recommendations","links":["password-security"],"tags":[],"content":"recommendations to family re: passwords and online security\nsee also: password security\nOverview\n\nturn on two-factor authentication\n\nprint and save recovery codes\n\n\nuse strong passwords\n\nuse a password generator – it needs to be random\ndon’t reuse passwords for different sites – it needs to be unique\n72 bits of entropy is a strong password for almost anything\n\nsometimes less is ok but it depends on specifics\n\n\npassword\n\nlength 12 characters\npick from: upper case, lower case, numbers, symbols\nexample: 7z*GUoEQog#p\n\n\npassphrase\n\nalternative to password\nrandomly chosen words\n6 words from a standard list of 7776 words\nexample: concrete take surgical balmy connector flashily\n\n\n\n\nuse a password manager\n\nthere’s no way to memorize 100+ unique strong passwords\nI use Bitwarden and recommend it\nchoose a strong master password\n\nif you lose the password there’s no way to recover it\n\n\nsecurity design\n\nthe encryption happens on your computer\nBitwarden never has your password\nencrypted vault is synced to the cloud\n\n\nusage\n\nbrowser plugin and mobile app will auto-type the password for you\n\n\n\n\nbackups\n\nmake sure you have backups for anything that might happen\npassword manager\n\nmaster password\n2fa recovery codes\nbackup of vault\n\n\nother accounts\n\nhave a recovery email set\n2fa recovery codes\n\n\n\n\nemergency\n\nvarious ways of allowing access in an emergency if desired\n\n\n\nBasics\n\nimportant accounts: banks, email, social media\n\nvery important: the email used as the recovery email for other accounts\n\n\nconsider: risk of getting locked out\n\nbanks will generally authenticate by other means\nwith Gmail and social media you may be out of luck\n\n\nturn on 2fa (two-factor authentication)\n\nyou get an SMS text message with login code sent to your phone number\nwhat if you lose access to your phone?\n\nmust also print single-use 2fa recovery codes\n\n\n(optional) TOTP authenticator app or FIDO2 security key (Yubikey) or passkey\n\neasier than typing in codes\nSMS is susceptible to SIM-jacking attack\n\n\n\n\nturn on email notifications for login attempts\n\nif someone is trying to log in to you’re account, you’ll know\n\n\n\nPasswords\n\n\nwhat is a password?\n\nold idea: remember a hard-to-guess combination of letters, numbers, symbols\n\nbut now attackers can try billions of combinations per second\npeople pick bad passwords no matter how much you tell them not to\nnobody can remember 100+ unique, strong passwords\n\n\nnew idea: use a password manager, don’t try to remember\n\n2fa as the first factor, and the password is an extra factor\nbad passwords and phishing aren’t as big a deal\n\n\nso… use a password manager!\n\n\n\nwhat is a password for?\n\nencryption - protecting a secret, even if the attacker has the file and can try billions of combinations per second\n\nAES-128 is recommended &amp; requires many times the current age of the universe to try all combinations\n\n\nauthentication - verifying you are who you say you are\n\ne.g., logging in to a web site\nthis is generally what we’re concerned with\neasier to protect\n\nyou can always change the password\nyou can limit the number of guesses\n\n\n\n\n\n\n\ntypes of attacks\n\nbrute force - trying combinations of letters, numbers, symbols until a match\n\ndictionary attack - trying dictionary words and other common patterns\n\n\nphishing - you type your password into a convincing fake web site\n\nnow they have your password!\n\n\ndata breach - they break into the web site and download the whole database\n\npasswords are protected in the database by hashing\nbut it may be worth brute forcing if a poor hash algorithm was used or the passwords are unsalted\n\n\npassword reuse - they get your password by breaking into an unimportant site\n\nthen they try it with important sites to see if you reused it\n\n\n\n\n\nbest practices\n\nnever reuse passwords on different sites!\n\nnot even with small variations\n\n\nnever click links in emails! it may be a phishing site\n\ninstead, type in the web address yourself and log in normally\n\n\nnever give your password or 2fa code to anyone by phone, text, or email\n\nonly enter it on the web site\nthey will never ask for it\n\n\n\n\n\nwhat’s a good password\n\nunique and randomly generated\nmust be strong enough\n\nshort answer: 12-character long password of upper case, lower case, numbers, symbols\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nentropyexampledifficulty to crackmaxed128 bitsT*H9&amp;2Qpp9rRH42^LeXU~longer than age of universestrong72 bits7z*GUoEQog#p$10 trillion in GPU timegood60 bitscLJF9%!MnE$3.4 billion in GPU timetypical40 bitst9gfD3m$3200 in GPU timeweak24 bitsozjph15 minutes\n\nmaxed: as strong as AES-128 key\nstrong: recommended minimum password strength\ngood: fine now, but future?\ntypical: likely to be cracked in an unsalted data breach\nweak: quickly cracked in minutes offline… but still &gt; 10 years* to crack if web site is properly rate-limited and 100% secure (big if!)\n\n\n\npassphrases\n\nalternative to passwords\nrandomly chosen words from a list of 7776 words\neasier to remember, easier to type on phones\nmost password managers can generate random passphrases\nshort answer: 6 random words\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nentropypassphraseexamplemaxed128 bits10 wordscoveted porous elk barista grub rule subsiding purebred pants debitstrong72 bits6 wordsconcrete take surgical balmy connector flashilygood60 bits5 wordsunbaked reload catalog requisite employer\n\n\nPassword managers\n\n\npassword managers\n\nBitwarden - free, secure, does everything you need, synced automatically\n\nI use this one and this is my recommendation\n\n\n1password - $36/year, secure, somewhat nicer to use, synced automatically\nKeePassXC - free &amp; open-source software, for technical users, not synced to cloud, you manage your backups yourself\n\n\n\nBitwarden usage\n\nset a strong master password which encrypts the vault\nvault is automatically synced to the cloud\nclever architecture… your password never leaves your device and BitWarden has no way to decrypt your passwords\n\nmake sure you back up your master password!\n\n\nyou can use web app, browser plugin, native app, and mobile app\n\nall roughly equivalent\nplugin can auto-type the password\n\n\n\n\n\nBitwarden security architecture\n\nmaster password encrypts a longer encryption key; that key encrypts the vault\ncloud server stores hashed password (hashed), account encryption key (encrypted), and vault (encrypted)\nto log in and download, the cloud server checks the master password hash and (optional) 2fa\naccount encryption key (encrypted) and vault (encrypted) are also stored locally\nto unlock vault, master password is used to decrypt account encryption key, which is used to decrypt the vault\npart of what makes the design secure is that the encryption process happens on your computer so your password is never transmitted to BitWarden\n\n\n\nBitwarden setup\n\ndecide: will spouses use the same account or each have their own?\n\nBitwarden premium/family plan has nice features to share groups of passwords between family accounts\n\n\nsign up at bitwarden.com\nchoose a good master password\n\nhow long? recommend 6 word passphrase\n\n5 word may be ok if 2fa turned on\n4 word may be ok if only storing less-important passwords (no banks)\n\n\nuse password generator: bitwarden.com/password-generator/\n\nset type to passphrase, words to 6, word separator to space\n\n\nimmediately write down and save the master password\n\nif you lose it there is no way to recover it!\n\n\n\n\ndecide: turn on 2fa for password manager?\n\nbenefit: even if someone gets your password (via phishing attack, logging in on a public computer, keylogger malware infection, etc.) they probably won’t be able to log in and download your vault\nrisk: if you lose your 2fa method (lost phone, lost access to email address) then you lose access to log in to the account (though you can still decrypt your local copy of the vault)\nmy opinion:\n\nit’s definitely a good idea and significantly improves security\nmaybe ok to turn off if you only use Bitwarden on your own computer and laptop\nif you turn it on, you should also add a backup 2fa and keep the 2fa recovery code in a safe place, plus a copy offsite!\n\n\n\n\nadd a test entry\ninstall browser plugin if desired\n\nupdate settings to adjust auto-lock\n\n\ninstall mobile app if desired\n\nupdate settings to adjust auto-lock\nconfigure phone settings to use Bitwarden for auto-typing passwords\n\n\nstart using it\n\nok to start with less important passwords at first while getting used to it\nok to write down master password at first and keep in your wallet/purse until you have it memorized\n\n\n\n\n\nBitwarden usage\n\nuse the built-in password generator for new passwords\n\nsince you’re using the password manager to remember your passwords, you can use very strong passwords\n\n\npassword manager should auto-lock after ~few minutes without being used\n\ncan configure to unlock again with fingerprint or short PIN code for less inconvenience\n\n\n\n\n\nBackups\n\nBitwarden backup plan\n\nwhat if…\n\nwhat if you forget / lose your master password?\nwhat if you lose your phone?\nwhat if you lose access to your email?\nwhat if there’s a fire and you lose everything at home?\n\nneed backups somewhere offsite\n\n\nwhat if the BitWarden cloud shuts down or corrupts your data?\n\nvery unlikely, but you should keep your own backups of the vault data\nyou also have the local copy of the vault kept on your device\n\n\n\n\nwhat you need to recover\n\nemail address\nmaster password\n2fa method or 2fa recovery code\n\n\nwhat to do\n\nwrite down or print an “emergency kit” with email address, master password, 2fa recovery code\n\nkeep it in a secure place like a fireproof safe or safety deposit box\n\n\nback up the local copy of the (encrypted) vault and (encrypted) account encryption key\nBitwarden lets you export an unencrypted plaintext copy of the vault data\n\nexport it, encrypt it yourself, and save it wherever you keep your backups\n\n\n\n\n\n\nBitwarden emergency access\n\noption 1: shared account or shared passwords with spouse\noption 2: keep master password and 2fa recovery code in a secure location with other documents, maybe a fireproof safe\noption 3: give half the the password to one trusted person and half to another, also 2fa recovery code in a safe place\noption 4: Bitwarden emergency access (premium feature)\n\ndesignate someone as emergency contact\nin an emergency they request access to your vault\nyou can reject the request\nafter a wait of several days they are given access\n\n\n\n\n\nScams\n\nif someone calls you and says they are from your bank, assume it’s a scammer\n\ndon’t give them your account information\nask them to tell you something only your bank would know about you\nask if you can call back via the 1-800- number on the bank’s web site\nthat said, many companies have bad security practices and call customers, then ask them to verify name, DOB, SSN, acct no, etc.! they shouldn’t!\n\n\nif someone you know calls and says it’s an emergency and they need you to transfer money to them, assume it’s a scammer\n\neven if it sounds just like someone you know and care about!\nAI deepfakes can convincingly simulate audio (and video) of anyone you know\nask them to tell you something only the real person would know\n\n\n\nFurther reading:\n\nwww.nytimes.com/wirecutter/reviews/best-password-managers/\nwww.nytimes.com/wirecutter/reviews/best-security-keys/\nxkcd.com/936/\nbitwarden.com/password-generator/\nbitwarden.com/password-strength\n\nscroll to “Passwords strength best practices”\n\n\nstuartschechter.medium.com/before-you-use-a-password-manager-9f5949ccf168\n"},"hwhack/embedded/raspberry-pi-pico":{"title":"raspberry pi pico","links":[],"tags":[],"content":"Raspberry Pi Pico is a full-featured Arm-core microcontroller for $4 ($7 with Wi-Fi and pre-soldered headers). There are C and MicroPython SDKs, and community Rust support.\nOne unique feature of the RP2040 chip is the PIO state machine module—useful for driving interfaces with tight timing requirements (e.g., for LED strips) without tying up the CPU.\nThe new (released 2024) Raspberry Pi Pico 2 is $5 and has extensive security feature upgrades.\nThere is also a Raspberry Pi Debug Probe for $12 (very useful).\nC SDK\nThese are my notes from getting started with the C SDK.\nThe process was pretty smooth but the documentation was not all in one place. This is everything I needed to get up and running on Mac OS.\nSee these first!\n\nwww.raspberrypi.com/documentation/microcontrollers/c_sdk.html\ndatasheets.raspberrypi.com/pico/getting-started-with-pico.pdf\ndatasheets.raspberrypi.com/pico/raspberry-pi-pico-c-sdk.pdf\n\nPrecompiled binaries\nStart by loading precompiled example programs…\nwww.raspberrypi.com/documentation/microcontrollers/c_sdk.html#your-first-binaries\nMac OS toolchain installation\nTo compile your own programs…\n\n“Quick-start your own project” guide\nGetting Started with the Raspberry Pi Pico-series pdf\n\np. 32 Appendix C: Manual toolchain setup: Manually Configure your Environment\n\n\n\nThese didn’t have complete info for Mac OS so I also relied on this video:\n\nYouTube: Raspberry Pi Pico - C/C++ SDK Setup [macOS]\n\nI was using the Pico W (version with Wi-Fi).\nHere are commands I ran:\nbrew install make cmake git gcc-arm-embedded libusb\n\ngit clone git@github.com:raspberrypi/pico-sdk.git\ncd pico-sdk\ngit submodule update --init\n\ncd ..\ngit clone github.com/raspberrypi/pico-examples.git\n\nmkdir hello-pico\ncd hello-pico\n\ncp ../pico-examples/pico_w/wifi/blink/picow_blink.c blink.c\ncp ../pico-examples/pico_sdk_import.cmake .\n\n# CMakeLists.txt from the video\nwget gist.githubusercontent.com/eldelto/0740e8f5259ab528702cef74fa96622e/raw/c8dc72471aaf22f79b677eaac2db8b542b01b1b0/CMakeLists.txt\n\n# edit CMakeLists.txt to uncomment line for Pico W\n\nbrew install picotool\n# or alternative: export PICOTOOL_FETCH_FROM_GIT_PATH=../../picotool\n\ncd build\n\nexport PICO_BOARD=pico_w\nexport PICO_SDK_PATH=../../pico-sdk\ncmake ..\n\n# or alternative: cmake -DPICO_BOARD=pico_w -DPICO_SDK_PATH=../../pico-sdk ..\n\nmake -j8        # 8 cores\n\n# hold down BOOTSEL and connect USB\ncp blink.uf2 /Volumes/RPI-RP2\n\nTroubleshooting\nMake sure you’re in the build directory and running cmake ... Note the ...\nIf you get errors, you may need to do a clean rebuild by deleting the entire build directory and starting over at cmake ... E.g., I had to do this after running cmake in the wrong directory.\nrun cmake again or just make?\n\nUsually just running ‘make’ will detect changes in ‘CMakeLists.txt’ and automatically run a ‘cmake ..’ However; there can be times when changes in ‘CMakeLists.txt’ are simply ignored and even a manual ‘cmake ..’ won’t resolve that. You then need to delete the entire ‘./build’ folder and re-build from the start.\n\nSaving build config envs\nSo it’s quicker to sit down and start working next time…\nSave to picoenvs.sh:\nexport PICO_BOARD=pico_w\nexport PICO_SDK_PATH=~/dev/pico/pico-sdk\nexport WIFI_SSID=&#039;Your SSID here&#039;\nexport WIFI_PASSWORD=&#039;Your passphrase here&#039;\n\nthen source it when opening a terminal session.\nAdd to ~/.profile\nalias make=&quot;/usr/bin/make -j 8&quot;\n\nNow it’s just\ncd build\ncmake ..\nmake\n\n# hold down BOOTSEL and connect USB\ncp blink.uf2 /Volumes/RPI-RP2\n\nBuilding example code\nRaspberry Pi supplies a few dozen example programs for the Pico. The readme has descriptions of each example.\ngithub.com/raspberrypi/pico-examples\nNote that some are for specialized hardware only on the RP2350 chip.\nblink\n(This assumes the pico-sdk and pico-examples repos were already cloned above during toolchain setup.)\nsource ~/dev/pico/picoenvs.sh\ncd pico-examples\n\nmkdir build\ncd build\ncmake ..\n\ncd blink\nmake\n\n# hold down BOOTSEL and connect USB\ncp blink.uf2 /Volumes/RPI-RP2\n\ntried these examples:\n→ blink\n→ pico_w/wifi/blink\nBoth examples blink the LED on the board.\nhello_world\nsee: USB or UART? below\nThis assumes the Pico is connected to the computer via its USB port.\n→ hello_world/usb\nls /dev/tty.usbmodem*\n\nminicom -b 115200 -o -D /dev/tty.usbmodem2302\n# or alternative: screen /dev/tty.usbmodem2302 115200\n\nwifi_scan\n→ pico_w/wifi/wifi_scan\nNote stdio is directed to UART by default. See USB or UART?\nntp_client, tls_client\nnetwork time protocol and transport layer security\n→ pico_w/wifi/ntp_client\n→ pico_w/wifi/tls_client\nNote that WIFI_SSID and WIFI_PASSWORD env vars must be set or cmake will skip building these examples.\nSkipping ntp_client example as WIFI_SSID is not defined\n\nAlso note stdio is directed to UART by default. See USB or UART?\nProgramming and debugging\nOverview\noptions for programming:\n\nprogram via USB as mass storage volume\nprogram via USB with picotool\nprogram via SWD with openocd (requires Debug Probe)\n\noptions for debugging:\n\nprintf debugging via USB virtual serial port\nprintf debugging via UART (requires usb-to-serial adapter)\ngdb/lldb debugging via SWD with openocd (requires Debug Probe)\n\nA Raspberry Pi Debug Probe ($12) is quick to set up and lets you program via SWD, use gdb/lldb debugger, and monitor the UART output—with no need to continually unplug and reconnect cables. Highly recommended for development.\nNote that the Pico without pre-soldered headers has no JST  connector for the SWD debug port. You’ll need to solder on header pins if you need SWD.\nserial debugging\nGood old printf debugging works.\nprintf(&quot;Hello, world!\\n&quot;);\n\nUART\nBy default stdio is directed to UART. You can monitor this with the Debug Probe or any other usb-to-serial adapter.\nRX/TX/GND connect to pins 1/2/3 on the Pico. See diagram.\nminicom -b 115200 -o -D /dev/tty.usbmodem1302\n\nUSB\nYou can also redirect stdio to USB. The Pico has built-in support to emulate a virtual serial port over its USB port. This way all you need is a USB cable.\nThe hello_world example shows how to configure the CMakeLists.txt. It looks something like this:\n# enable usb output, disable uart output\npico_enable_stdio_usb(hello_usb 1)\npico_enable_stdio_uart(hello_usb 0)\n\npicotool\nquery and program Pico via USB\nSee first:\n\nGetting Started with the Raspberry Pi Pico Appendix B\ngithub.com/raspberrypi/picotool\n\nyou must first reboot holding BOOTSEL button or\n\nas of version 1.1 of picotool it is also possible to interact with Raspberry Pi microcontrollers that are not in BOOTSEL mode, but are using USB stdio support from the SDK by using the -f argument of picotool.\n\nbrew install picotool\n\nuseful commands to try\npicotool info\npicotool info -a\npicotool load blink.uf2\npicotool reboot\n\nto enter BOOTSEL mode: after programming pico-examples/hello-world/usb (or any other using USB stdio) via USB mass storage method:\npicotool info -f\n\nwill reboot into BOOTSEL mode\nopenocd\nprogramming via SWD\nconnect Debug Probe JST-SH for SWD and RX/TX/GND pins for UART\nSee first:\n\nwww.raspberrypi.com/documentation/microcontrollers/debug-probe.html\n\nSee also:\n\nopenocd.org/doc/html/General-Commands.html\n\ncheck Debug Probe firmware version\n$ openocd -f interface/cmsis-dap.cfg\n...\nInfo : CMSIS-DAP: FW Version = 2.0.0\n...\n\nprogramming\nsudo openocd -f interface/cmsis-dap.cfg -f target/rp2040.cfg -c &quot;adapter speed 5000&quot; -c &quot;program hello_serial.elf verify reset exit&quot;\n\nreboot pico\nopenocd -f interface/cmsis-dap.cfg -f target/rp2040.cfg -c &quot;adapter speed 5000&quot; -c &quot;init&quot; -c &quot;reset run&quot; -c &quot;shutdown&quot;\n\nhalt pico\n... -c &quot;adapter speed 5000&quot; -c &quot;init&quot; -c &quot;reset halt&quot; -c &quot;shutdown&quot;\n\ngdb/lldb debugging\nTODO\nC SDK additional libraries\nMQTT\nTODO"},"index":{"title":"hello","links":["howto/hobbies/ham-radio","howto/archiving/artwork","howto/sysadmin/password-manager-recommendations","swhack/milkdrop","swhack/strafejumping","index.xml"],"tags":[],"content":"   under construction :)   \na window into my personal knowledge base\nwhat\nit’s a digital garden\nthere are hundreds of notes in my private repo\nall edited with obsidian—and I’m aiming to publish many of them\nwhoami\ni’ve got a pretty good nose\ni was an electrical engineer in a past life\ni always seem to come back to that one Heinlein quote\nmy poems don’t come out as sonnets, though\nwhere to start?\n← if your window is wide enough you’ll see a file explorer to the left\nthis is just a beginning; you can read about ham radio… archival photos of artwork… password manager recommendations… milkdrop music visualization… quake 3 strafejumping\nyou can subscribe to the RSS feed"},"swhack/milkdrop":{"title":"milkdrop","links":[],"tags":[],"content":"Milkdrop is a Winamp music visualization plugin from back in the day (ca 2001). It had a really active community of folks releasing thousands and thousands of “presets” and afaik there isn’t anything else today with that kind of scene.\nResources\nRyan Geiss homepage\nwww.geisswerks.com/about_milkdrop.html\ngithub.com/projectM-visualizer/projectm\nopen source reimplementation of milkdrop\n\nalso supports WebGL for browsers\nsee: spiegelmock.com/2018/04/07/projectm-music-visualizer-status-update/\n\nbutterchurnviz.com/\nMilkdrop in browser\nNestDrop VJ environment\nnestimmersion.ca/nestdrop.php\nMilkDrop2077 : a free and open-source presets masher and randomizer for MilkDrop\nforums.winamp.com/forum/visualizations/milkdrop/milkdrop-presets/315458\nSee also:\n\nwww.reddit.com/r/milkdrop/wiki/index/\nWinamp forums: MilkDrop Presets\nnews.ycombinator.com/item\nwww.youtube.com/watch\n\nPreset packs\nwww.geisswerks.com/about_milkdrop.html\nRyan Geiss favorites\nbltc pack\nforums.winamp.com/forum/visualizations/milkdrop/milkdrop-presets/173840-bltc-1-4\nNestDrop cream of the crop\nwww.patreon.com/posts/pack-nestdrop-91682111\nArchive.org MilkDrop Preset Collection\narchive.org/details/milkdrops\nHow it works\n“geiss” is an earlier proto-milkdrop\nwww.geisswerks.com/geiss/secrets.html\n\n\nDraw some audio waveform into an image.\nWarp the image.\n\nThe first step is pretty cheap; the second step is the computationally expensive one.\n\nRunning Milkdrop\nI installed projectm with homebrew but found that keyboard shortcuts didn’t work. It may have been compiled with them disabled?\nInstead, I downloaded and ran the latest standalone projectM SDL frontend application precompiled for Mac OS following instructions.\nNote: the homebrew and standalone versions came with different preset packs.\nPreset authoring\nMILKDROP preset authoring guide\nwww.geisswerks.com/milkdrop/milkdrop_preset_authoring.html\nscripting reference\nprojectM Milkdrop Preset Expression Syntax\ngithub.com/projectM-visualizer/projectm-eval/blob/master/docs/Expression-Syntax.md\nBeginners Guide to MilkDrop Preset Writing by Rovastar and Krash\nweb.archive.org/web/20130523223615/http://www.milkdrop.co.uk/guide.htm\ntutorial\nGetting started\nI moved the presets directory to presets_bak and made a new presets directory with a file hello.milk. Then I followed instructions in the milkdrop.co.uk tutorial to create a blank preset with sensible defaults:\n\nSo the initial advice is simple create a blank preset with no zoom, no rot, no warp, no colours, etc. And here is one created for you.\n[preset00]\nfRating=3.000000\nfGammaAdj=1.000000\nfDecay=0.925000\n...\n\n\nConcepts\n\nper-frame vs. per-vertex equations\nwave_mode\n\nWaveformMode.hpp\nwave_mystery\n\n\ndecay\nvariables\n\nzoom, rot, warp, cx/cy, dx/dy, sx/sy\ntime, frame\nbass, mid, treb, bass_att, mid_att, treb_att\n\n\nper-vertex variables\n\nrad, ang, x, y\n\n\n\nCustom shapes and waves\nTODO\nShaders\nTODO\nMilkdrop uses Direct3D HLSL\nwarp shader, composite shader\nwww.geisswerks.com/milkdrop/milkdrop_preset_authoring.html#3f\nprojectM glsl\nspiegelmock.com/2018/07/29/projectm-opengl-and-shader-modernization/\nBeat detection\nmilkdrop.co.uk tutorial Section 9.5 Tutorial 4 - Shift\n\nThe fourth tutorial covers the preset “Shift”. This preset introduces a commonly used method of beat detection, which can be easily transported across into other presets.\n\n\nIF bass_att is greater than bass_thresh  \nTHEN set bass_thresh to 2  \nELSE do (stuff)  \nENDIF\n\n\n\nNow, we need to focus on what that (stuff) part does. I’ve reproduced it here:\n(bass_thresh - 1.3)*0.96 + 1.3\n\n\nA plain english version of the equation is:\n“Take 96% of the difference between bass_thresh and 1.3, and add it to 1.3”\nThis generates an exponential/log curve\n\n\nThis means that the bass_thresh value will start at a point (in this case, 2), and drop. The value will drop relatively quickly at first, but will slow down; eventually getting so close to 1.3 that it IS 1.3.\nSo what happens then? Well, at some point, the bass_att (which is the percentage of the bass in this frame relative to the last frame) will be above our threshold, and the threshold will be set to 2 again. Incidentally, this is the same way that MilkDrop detects beats for its “Hard Cuts”.\n\n\nIF bass_thresh = 2 (i.e. we have just detected a beat) \nTHEN set dx_residual to 0.016*sin(time*7) (which is essentially a random number between -0.016 and 0.016) \nELSE keep dx_residual the same (multiplying itself by 1) \nENDIF \n\nThe dy_residual equation works in the same way. The three lines of code are therefore generating two random numbers between -0.016 and 0.016 every time we detect a beat.\n\nSee also:\nimproved beat detection\nforums.winamp.com/forum/visualizations/milkdrop/milkdrop-development/4622543-the-real-milkdrop-s-perfect-beat-detection#post4622699"},"swhack/strafejumping":{"title":"strafejumping","links":[],"tags":[],"content":"Strafe-jumping is a movement technique in Quake 3 that allows the player to move much faster than the nominal run speed.\nIt was discovered as a bug in Quake II and fans liked it so much id software carried it forward to subsequent games.\nwhy it’s fun\nI played a lot of Quake 3 engine games, in particular Star Trek Voyager: Elite Force. Once you develop muscle memory for strafe jumping it’s extremely satisfying.\nThere’s a rhythm to it, and it feels like you’re running, one footfall after another. You drop into a flow state where everything else fades away—but if your attention wavers and you miss a beat, you stumble and kill your momentum.\nIt takes a lot of skill to keep up your speed while dodging enemies and returning fire. You only get a split second between strides to aim and take a shot before snapping back to the strafe.\nwhat and how\nYouTube: Quake Champions: All strafe jumping techniques\nConcept: Strafe Jumping\n\nA proper strafe jump within Quake 3 can increase your UPS from 320 to over 600.\n\n\n\nPress the forward key\nPress the jump and left or right strafe key at the same time\nWhile in the air move the mouse in the direction of the strafe\nJump immediately after landing\n\n(Repeat steps two and three, alternating the strafe and turn with each jump.)\n\n\nWhen landing, the player must jump immediately afterwards or else the ground friction will slow them down. When jumping, the player is unaffected by ground friction.\n\nreddit: How to practice strafe-jumping?:\n\nThe most important thing is to synchronize your mouse movement with holding A+W or D+w. Once you land, jump again and switch directions, and always keep your eyes on the speedometer. The key is not to make huge movements, just SLIGHTLY, SMOOTHLY move your mouse in the direction of the strafe key you’re pressing and you will accelerate.\nOnce you get this down, try going into a game with bots. When aiming while strafejumping (while you’re in the air i mean) let go of all movement keys, hold space and look where you want, then look back to where you want to go. When you land you will immediately jump since you’re holding space. after you jump start pressing w and corresponding strafe keys again.\n\nstrafe jumping physics\nHow is strafe jumping implemented in the game engine physics code?\ntl;dr:\nre: acceleration… instead of limiting speed directly, only the component of velocity in the direction of acceleration is limited\nwhy? it feels better if the player can accelerate sideways relative to their current velocity without killing their forward momentum\nas a result there is no hard cap on speed… i.e., continuous acceleration is possible\nbut there are diminishing returns as greater and greater strafe-jumping precision is required to continue adding speed\nalso necessary: there is a one-frame window where friction is not applied after landing from a jump… without this, friction would bleed off any excess speed\nacceleration code\nQuake III bg_pmove.c:\n/*\n==============\nPM_Accelerate\n\nHandles user intended acceleration\n==============\n*/\nstatic void PM_Accelerate( vec3_t wishdir, float wishspeed, float accel ) {\n#if 1\n\t// q2 style\n\tint\t\t\ti;\n\tfloat\t\taddspeed, accelspeed, currentspeed;\n\n\tcurrentspeed = DotProduct (pm-&gt;ps-&gt;velocity, wishdir);\n\taddspeed = wishspeed - currentspeed;\n\tif (addspeed &lt;= 0) {\n\t\treturn;\n\t}\n\taccelspeed = accel*pml.frametime*wishspeed;\n\tif (accelspeed &gt; addspeed) {\n\t\taccelspeed = addspeed;\n\t}\n\t\n\tfor (i=0 ; i&lt;3 ; i++) {\n\t\tpm-&gt;ps-&gt;velocity[i] += accelspeed*wishdir[i];\t\n\t}\n#else\n\t// proper way (avoids strafe jump maxspeed bug), but feels bad\n\t...\n#endif\n}\n\nparameters:\nwishdir and wishspeed are the normalized unit vector and magnitude, respectively, of wishvel\nsomewhat confusingly, wishspeed is used as both the target velocity in the direction wishdir and as a base acceleration value\nmore confusingly, accel is not the acceleration, it’s a multiple used to adjust acceleration based on conditions (land, air, water, flying)\nacceleration is calculed as accel \\times wishspeed\naccel values:\nfloat\tpm_accelerate = 10.0f;\nfloat\tpm_airaccelerate = 1.0f;\nfloat\tpm_wateraccelerate = 4.0f;\nfloat\tpm_flyaccelerate = 8.0f;\n\nvariables:\nnaming is pretty loose\ne.g., currentspeed isn’t the magnitude of pm-&gt;ps-&gt;velocity as you might expect; it’s the component of the current velocity in the direction of wishdir\npseudocode\n\\vec{v} = \\texttt{pm-&gt;ps-&gt;velocity}\n\\vec{w} = \\|w\\| \\times \\hat{w} = \\texttt{wishspeed} \\times \\texttt{wishdir}\na_{max} = \\texttt{accel} \\times \\texttt{wishspeed}\ndt = \\texttt{pml.frametime}\n# component of current velocity in the direction of wishdir\nv_w = \\vec{v} \\cdot \\hat{w}\n\\texttt{if}\\ v_w \\geq \\|w\\|:\n# do nothing if it&#039;s already larger than wishspeed\nreturn\n# nominal change in velocity in the direction of wishdir\ndv = a_{max} \\times dt\n# don&#039;t overshoot wishspeed\ndv_{max} = \\|w\\| - v_w\ndv = \\min(dv, dv_{max})\n# update velocity\n\\mathrel{\\texttt{pm-&gt;ps-&gt;velocity +=}} dv \\times \\hat{w}\nfurther reading\nBunnyhopping from the Programmer’s Perspective\nYouTube: Strafe-jumping physics explained\n\ngreat visualization but pseudocode and explanation are not exactly correct\nsee detailed comment by @MistorDi:\n\nStack Exchange: Implementing strafe jumping\n\ndiscusses “Strafing Theory” by injx\n\nreddit: Fully interactive strafejumping visualization tool\nWhat is Strafe Jumping? by Dylan Lederle-Ensign &amp; Noah Wardrip-Fruin in Transactions of the Digital Games Research Association"}}